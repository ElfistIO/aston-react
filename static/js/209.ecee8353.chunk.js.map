{"version":3,"file":"static/js/209.ecee8353.chunk.js","mappings":"qTACA,EAAoC,oC,SCsBvBA,EAAW,WACtB,IAAQC,GAASC,EAAAA,EAAAA,KAATD,KACFE,GAAeC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,SAASA,QAA1B,IACpC,GAAgCC,EAAAA,EAAAA,UAAiB,UAAjD,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,QAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KACA,GAA4BC,EAAAA,EAAAA,GAC1B,CACEC,YAAaV,GAEf,CAAEW,MAAOX,IAJHY,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAMd,GAAsCT,EAAAA,EAAAA,UAAS,GAA/C,eAAOU,EAAP,KAAoBC,EAApB,KACMC,EAde,GAcGF,EAClBG,EAAmBD,EAfJ,GAmBfE,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,EAASC,EAAcC,EAAcf,GAC5C,OAAQA,GACN,IAAK,OAQL,QACE,OAAOc,EAAEE,KAAKC,cAAcF,EAAEC,MAPhC,IAAK,MACH,OAAOF,EAAEI,SAASD,cAAcF,EAAEG,UACpC,IAAK,SACH,OAAOJ,EAAEK,OAAOF,cAAcF,EAAEI,QAClC,IAAK,OACH,OAAOL,EAAEM,UAAUH,cAAcF,EAAEK,WAIxC,CA2DD,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,GAAkBC,EAAAA,EAAAA,KACtBC,EAAAA,EAAAA,IAAWC,EAAAA,GAAI,QAAL,iBAAiBlC,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMmC,KAAO,aAF5B,8CAId,oGACQC,EAAAA,EAAAA,IAAWL,GAAiB,SAACM,GACjC,IAAMC,EAA6B,GACnCD,EAAcE,SAAQ,SAACC,GACrBF,EAAMG,KAAKD,EAAI1B,OAChB,IACDM,GAASsB,EAAAA,EAAAA,IAAYJ,GACtB,IAPH,4CAJc,0DAadK,EACD,GAAE,CAACvB,EAAD,OAAWpB,QAAX,IAAWA,OAAX,EAAWA,EAAMmC,OAGlB,iBAAKS,UAAWC,EAAhB,WACE,SAAC,IAAD,CAAQrC,YAAaA,EAAaE,cAAeA,KACjD,gBAAKkC,UAAU,YAAf,SACG7B,GACC,gBAAK6B,UAAU,0BAAf,UACE,gBAAKA,UAAU,qBAGjB,gCAlER,SAAwBrC,GACtB,OAAQA,GACN,IAAK,SA2BL,QACE,OACE,SAAC,IAAD,CACE+B,MAAK,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACVgC,QACAC,MAAK,SAACxB,EAAGC,GAAJ,OAAUF,EAASC,EAAGC,EAAGf,EAAzB,IACLqC,MAAM3B,EAAkBD,KAxBjC,IAAK,YACH,OACE,SAAC,IAAD,CACEoB,MAAK,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACVgC,QACAC,MAAK,SAACxB,EAAGC,GAAJ,OAAUF,EAASC,EAAGC,EAAGf,EAAzB,IACLqC,MAAM3B,EAAkBD,KAGjC,IAAK,OACH,OACE,SAAC8B,EAAA,EAAD,CACEV,MAAK,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KACVgC,QACAC,MAAK,SAACxB,EAAGC,GAAJ,OAAUF,EAASC,EAAGC,EAAGf,EAAzB,IACLqC,MAAM3B,EAAkBD,KAapC,CA4BU+B,CAAe1C,IACX,OAAJO,QAAI,IAAJA,OAAA,EAAAA,EAAMA,QACL,SAAC,IAAD,CACEoC,MAAK,OAAEpC,QAAF,IAAEA,OAAF,EAAEA,EAAMA,KAAKqC,OAClBC,SA3FG,SAACC,GAChBpC,EAAeoC,EAChB,EA0FaC,aA5GO,GA6GPtC,YAAaA,WAQ5B,C","sources":["webpack://aston-react/./src/pages/wishList/wishList.module.scss?24fb","pages/wishList/wishList.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wishList__wrapper\":\"wishList_wishList__wrapper__WdOCa\"};","import { SetStateAction, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../../services/AuthContext/AuthContext\";\r\nimport {\r\n  collection,\r\n  DocumentData,\r\n  onSnapshot,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../services/firestore\";\r\nimport { useGetCollectionQuery } from \"../../app/slices/apiSlice\";\r\nimport { ImageType } from \"../searchResult/imageType/imageType\";\r\nimport { Filter } from \"../../components/filter/filter\";\r\nimport { ChecklistType } from \"../searchResult/checklistType/checklistType\";\r\nimport { FullType } from \"../searchResult/FullType/FullType\";\r\nimport { Pagination } from \"../../components/pagination/pagination\";\r\nimport { useAppDispatch, useAppSelector } from \"../../app/hooks\";\r\nimport { setWishList } from \"../../app/slices/wishList\";\r\n\r\nimport s from \"./wishList.module.scss\";\r\nimport * as Scry from \"scryfall-sdk\";\r\n\r\nconst CARDS_PER_PAGE = 20;\r\n\r\nexport const WishList = () => {\r\n  const { user } = useAuth();\r\n  const userWishList = useAppSelector((state) => state.wishList.wishList);\r\n  const [showType, setShowType] = useState<string>(\"images\");\r\n  const [sortListBy, setSortListBy] = useState(\"name\");\r\n  const { data, isLoading } = useGetCollectionQuery(\r\n    {\r\n      identifiers: userWishList,\r\n    },\r\n    { skip: !userWishList }\r\n  );\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const indexOfLastCard = currentPage * CARDS_PER_PAGE;\r\n  const indexOfFirstCard = indexOfLastCard - CARDS_PER_PAGE;\r\n  const paginate = (pageNumber: SetStateAction<number>) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const dispatch = useAppDispatch();\r\n\r\n  function sortList(a: Scry.Card, b: Scry.Card, sortListBy: string) {\r\n    switch (sortListBy) {\r\n      case \"name\":\r\n        return a.name.localeCompare(b.name);\r\n      case \"set\":\r\n        return a.set_name.localeCompare(b.set_name);\r\n      case \"rarity\":\r\n        return a.rarity.localeCompare(b.rarity);\r\n      case \"type\":\r\n        return a.type_line.localeCompare(b.type_line);\r\n      default:\r\n        return a.name.localeCompare(b.name);\r\n    }\r\n  }\r\n\r\n  function renderShowType(showType: string) {\r\n    switch (showType) {\r\n      case \"images\":\r\n        return (\r\n          <ImageType\r\n            cards={data?.data\r\n              .slice()\r\n              .sort((a, b) => sortList(a, b, sortListBy))\r\n              .slice(indexOfFirstCard, indexOfLastCard)}\r\n          />\r\n        );\r\n      case \"checklist\":\r\n        return (\r\n          <ChecklistType\r\n            cards={data?.data\r\n              .slice()\r\n              .sort((a, b) => sortList(a, b, sortListBy))\r\n              .slice(indexOfFirstCard, indexOfLastCard)}\r\n          />\r\n        );\r\n      case \"full\":\r\n        return (\r\n          <FullType\r\n            cards={data?.data\r\n              .slice()\r\n              .sort((a, b) => sortList(a, b, sortListBy))\r\n              .slice(indexOfFirstCard, indexOfLastCard)}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <ImageType\r\n            cards={data?.data\r\n              .slice()\r\n              .sort((a, b) => sortList(a, b, sortListBy))\r\n              .slice(indexOfFirstCard, indexOfLastCard)}\r\n          />\r\n        );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const queryCollection = query(\r\n      collection(db, \"users\", `${user?.uid}`, \"wishList\")\r\n    );\r\n    async function getCards() {\r\n      await onSnapshot(queryCollection, (querySnapshot) => {\r\n        const cards: Array<DocumentData> = [];\r\n        querySnapshot.forEach((doc) => {\r\n          cards.push(doc.data());\r\n        });\r\n        dispatch(setWishList(cards));\r\n      });\r\n    }\r\n    getCards();\r\n  }, [dispatch, user?.uid]);\r\n\r\n  return (\r\n    <div className={s.wishList__wrapper}>\r\n      <Filter setShowType={setShowType} setSortListBy={setSortListBy} />\r\n      <div className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"progress cyan lighten-1\">\r\n            <div className=\"indeterminate\"></div>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {renderShowType(showType)}\r\n            {data?.data && (\r\n              <Pagination\r\n                count={data?.data.length}\r\n                paginate={paginate}\r\n                cardsPerPage={CARDS_PER_PAGE}\r\n                currentPage={currentPage}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["WishList","user","useAuth","userWishList","useAppSelector","state","wishList","useState","showType","setShowType","sortListBy","setSortListBy","useGetCollectionQuery","identifiers","skip","data","isLoading","currentPage","setCurrentPage","indexOfLastCard","indexOfFirstCard","dispatch","useAppDispatch","sortList","a","b","name","localeCompare","set_name","rarity","type_line","useEffect","queryCollection","query","collection","db","uid","onSnapshot","querySnapshot","cards","forEach","doc","push","setWishList","getCards","className","s","slice","sort","FullType","renderShowType","count","length","paginate","pageNumber","cardsPerPage"],"sourceRoot":""}