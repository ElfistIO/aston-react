{"version":3,"file":"static/js/59.dfeb48a5.chunk.js","mappings":"qRASaA,EAAU,SAACC,GAAkB,IAAD,EAEvC,OADAC,EAAAA,EAAAA,YAAU,kBAAMC,IAAAA,UAAN,KAER,eAAIC,UAAU,cAAd,mBACGH,EAAMI,eADT,aACG,EAAeC,KAAI,SAACC,EAAQC,GAAT,OAClB,2BACE,iBAAKJ,UAAU,qBAAf,WACE,cAAGA,UAAU,iBAAb,2BADF,cACwDI,EAAQ,EADhE,MACsE,IACnED,EAAOE,OAAOC,cAFjB,eAE4CH,EAAOI,iBAEnD,gBAAKP,UAAU,mBAAf,UACE,0BAAOG,EAAOK,cANTJ,EADS,KAazB,E,UCzBD,EAAgC,gCAAhC,EAA8E,8BAA9E,EAAiI,qCAAjI,EAAuL,iCCW1KK,EAAW,YACtBX,EAAAA,EAAAA,YAAU,kBAAMC,IAAAA,UAAN,GAAoB,IAC9B,OAAwBW,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,YAA9B,eAAOT,EAAP,KAAgBY,EAAhB,KACA,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,EAAM,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAcE,IAAI,MAejC,OAbAnB,EAAAA,EAAAA,YAAU,WAAM,8CACd,mGACQoB,EAAKC,MAAMC,KAAKJ,GACnBK,MAAK,SAACV,GAAD,OAAUC,EAAQD,EAAlB,IACLW,MAAMC,QAAQC,OAHnB,2CADc,sEAOd,0GACQb,QADR,IACQA,OADR,EACQA,EAAMc,aAAaJ,MAAK,SAACpB,GAAD,OAAaY,EAAWZ,EAAxB,IADhC,2CAPc,yBAAC,WAAD,wBAMdyB,GANc,mCAUdD,EACD,GAAE,CAACd,EAAMK,KAGR,gBAAKhB,UAAW2B,EAAhB,UACE,iBAAK3B,UAAU,YAAf,WACE,gBAAKA,UAAW2B,EAAhB,UACE,iBAAK3B,UAAW2B,EAAhB,WACE,SAAC,IAAD,CAAMhB,KAAMA,KACZ,SAAC,IAAD,CAAUA,KAAMA,KAChB,iBAAKX,UAAW2B,EAAhB,WACE,SAAC,IAAD,CAAShB,KAAMA,KACf,SAAC,IAAD,CAAWA,KAAMA,YAItB,OAACV,QAAD,IAACA,GAAAA,EAAS2B,QAGT,SAAChC,EAAD,CAASK,QAASA,KAFlB,mEAOT,C","sources":["components/rulings/rulings.tsx","webpack://aston-react/./src/pages/card/cardPage.module.scss?7492","pages/card/cardPage.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { Ruling } from \"scryfall-sdk\";\r\n\r\nimport M from \"materialize-css\";\r\n\r\ninterface Props {\r\n  rulings: Ruling[] | undefined;\r\n}\r\n\r\nexport const Rulings = (props: Props) => {\r\n  useEffect(() => M.AutoInit());\r\n  return (\r\n    <ul className=\"collapsible\">\r\n      {props.rulings?.map((ruling, index) => (\r\n        <li key={index}>\r\n          <div className=\"collapsible-header\">\r\n            <i className=\"material-icons\">library_books</i>Rule â„–{index + 1} by{\" \"}\r\n            {ruling.source.toUpperCase()}, published {ruling.published_at}\r\n          </div>\r\n          <div className=\"collapsible-body\">\r\n            <span>{ruling.comment}</span>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main__wrapper\":\"cardPage_main__wrapper__sgZB9\",\"main__cards\":\"cardPage_main__cards__H2Db5\",\"main__card_wrapper\":\"cardPage_main__card_wrapper__f05nM\",\"main__card_set\":\"cardPage_main__card_set__rVOKZ\"};","import { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { Card } from \"../../components/card/card\";\r\nimport { CardInfo } from \"../../components/cardInfo/cardinfo\";\r\nimport { PrintInfo } from \"../../components/printInfo/printInfo\";\r\nimport { SetInfo } from \"../../components/setInfo/setInfo\";\r\nimport { Rulings } from \"../../components/rulings/rulings\";\r\n\r\nimport * as Scry from \"scryfall-sdk\";\r\nimport s from \"./cardPage.module.scss\";\r\nimport M from \"materialize-css\";\r\n\r\nexport const CardPage = () => {\r\n  useEffect(() => M.AutoInit(), []);\r\n  const [card, setCard] = useState<Scry.Card>();\r\n  const [rulings, setRulings] = useState<Scry.Ruling[]>();\r\n  const [searchParams] = useSearchParams();\r\n  const cardId = searchParams?.get(\"id\");\r\n\r\n  useEffect(() => {\r\n    async function getCard() {\r\n      await Scry.Cards.byId(cardId!)\r\n        .then((card) => setCard(card))\r\n        .catch(console.error);\r\n    }\r\n    getCard();\r\n    async function getRulings() {\r\n      await card?.getRulings().then((rulings) => setRulings(rulings));\r\n    }\r\n    getRulings();\r\n  }, [card, cardId]);\r\n\r\n  return (\r\n    <div className={s.main__wrapper}>\r\n      <div className=\"container\">\r\n        <div className={s.main__cards}>\r\n          <div className={s.main__card_wrapper}>\r\n            <Card card={card} />\r\n            <CardInfo card={card} />\r\n            <div className={s.main__card_set}>\r\n              <SetInfo card={card} />\r\n              <PrintInfo card={card} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {!rulings?.length ? (\r\n          <div>There's no rulings for this card.</div>\r\n        ) : (\r\n          <Rulings rulings={rulings} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["Rulings","props","useEffect","M","className","rulings","map","ruling","index","source","toUpperCase","published_at","comment","CardPage","useState","card","setCard","setRulings","useSearchParams","searchParams","cardId","get","Scry","Cards","byId","then","catch","console","error","getRulings","getCard","s","length"],"sourceRoot":""}